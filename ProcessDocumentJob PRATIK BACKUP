private void insertNewProfitAndLossRecord(String ocrResultJson) {
    System.debug('START insertNewProfitAndLossRecord');
    Profit_and_Loss__c newRecord = new Profit_and_Loss__c();
    System.debug('Initialized new Profit_and_Loss__c record');

    // Parse the OCR result into a Map
    Map<String, Object> responseMap = (Map<String, Object>) JSON.deserializeUntyped(ocrResultJson);
    System.debug('Deserialized ocrResultJson to Map: ' + responseMap);

    // Drill down to the array of key-value pairs
    if (responseMap.containsKey('outputValues')) {
        Map<String, Object> outputValues = (Map<String, Object>) responseMap.get('outputValues');
        System.debug('outputValues: ' + outputValues);

        if (outputValues.containsKey('ocrDocumentScanResultDetails')) {
            Map<String, Object> detailsWrapper = (Map<String, Object>) outputValues.get('ocrDocumentScanResultDetails');
            System.debug('detailsWrapper: ' + detailsWrapper);

            List<Object> detailsList = (List<Object>) detailsWrapper.get('ocrDocumentScanResultDetails');
            System.debug('detailsList: ' + detailsList);

            // Loop through each page of results (should usually just be one)
            for (Object detailObj : detailsList) {
                Map<String, Object> detail = (Map<String, Object>) detailObj;
                System.debug('detail: ' + detail);

                List<Object> keyValuePairs = (List<Object>) detail.get('keyValuePairs');
                System.debug('keyValuePairs: ' + keyValuePairs);

                for (Object pairObj : keyValuePairs) {
                    Map<String, Object> pair = (Map<String, Object>) pairObj;
                    Map<String, Object> key = (Map<String, Object>) pair.get('key');
                    Map<String, Object> value = (Map<String, Object>) pair.get('value');
                    String keyStr = (String) key.get('value');
                    String valueStr = (String) value.get('value');

                    System.debug('Raw OCR Key: ' + keyStr + ', Value: ' + valueStr);

                    // Normalize the key for matching
                    String keyNormalized = keyStr != null ?
                        keyStr.replaceAll('[^a-zA-Z0-9]', '').toLowerCase() : '';
                    System.debug('Normalized OCR Key: ' + keyNormalized);

                    // Actual mapping with debug statements
                    if (keyNormalized.contains('borrowernames')) {
                        System.debug('Matched: Borrower Name -> ' + valueStr);
                        newRecord.Borrower_Name_s__c = valueStr;
                    } else if (keyNormalized.contains('companyname')) {
                        System.debug('Matched: Company Name -> ' + valueStr);
                        newRecord.Company_Name__c = valueStr; // Custom field!
                    } else if (keyNormalized.contains('loannumber')) {
                        System.debug('Matched: Loan Number -> ' + valueStr);
                        newRecord.Loan_Number__c = valueStr;
                    } else if (keyNormalized.contains('typeofbusiness')) {
                        System.debug('Matched: Type of Business -> ' + valueStr);
                        newRecord.Type_of_Bussiness__c = valueStr;
                    } else {
                        System.debug('No mapping for this key: ' + keyStr);
                    }
                    // Add more mappings as needed, each with a debug
                }
            }
        } else {
            System.debug('No ocrDocumentScanResultDetails key found in outputValues');
        }
    } else {
        System.debug('No outputValues key found in responseMap');
    }

    // Insert the record (if any fields were set)
    try {
        System.debug('Attempting to insert newRecord: ' + newRecord);
        insert newRecord;
        System.debug('SUCCESS: Inserted Profit_and_Loss__c record with Id: ' + newRecord.Id);
    } catch (Exception e) {
        System.debug('ERROR: Failed to insert Profit_and_Loss__c record: ' + e.getMessage());
    }
    System.debug('END insertNewProfitAndLossRecord');
}
