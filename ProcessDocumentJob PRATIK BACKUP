private void insertNewProfitAndLossRecord(String detailsString) {
    System.debug('insertNewProfitAndLossRecord called with detailsString: ' + detailsString);

    if (String.isBlank(detailsString)) {
        System.debug('No details provided!');
        return;
    }

    Profit_and_Loss__c newRecord = new Profit_and_Loss__c();
    System.debug('Created new Profit_and_Loss__c record');

    // Parse JSON!
    Map<String, Object> responseMap = (Map<String, Object>) JSON.deserializeUntyped(detailsString);
    System.debug('Deserialized JSON: ' + responseMap);

    if (responseMap.containsKey('outputValues')) {
        Map<String, Object> outputValues = (Map<String, Object>) responseMap.get('outputValues');
        System.debug('outputValues: ' + outputValues);

        if (outputValues.containsKey('ocrDocumentScanResultDetails')) {
            Map<String, Object> detailsWrapper = (Map<String, Object>) outputValues.get('ocrDocumentScanResultDetails');
            System.debug('detailsWrapper: ' + detailsWrapper);

            List<Object> detailsList = (List<Object>) detailsWrapper.get('ocrDocumentScanResultDetails');
            System.debug('detailsList: ' + detailsList);

            for (Object detailObj : detailsList) {
                Map<String, Object> detail = (Map<String, Object>) detailObj;
                System.debug('detail: ' + detail);

                List<Object> keyValuePairs = (List<Object>) detail.get('keyValuePairs');
                System.debug('keyValuePairs: ' + keyValuePairs);

                for (Object pairObj : keyValuePairs) {
                    Map<String, Object> pair = (Map<String, Object>) pairObj;
                    Map<String, Object> key = (Map<String, Object>) pair.get('key');
                    Map<String, Object> value = (Map<String, Object>) pair.get('value');
                    String keyStr = (String) key.get('value');
                    String valueStr = (String) value.get('value');

                    System.debug('OCR KEY RAW: ' + keyStr + ', VALUE: ' + valueStr);

                    String keyNormalized = keyStr != null ? keyStr.replaceAll('[^a-zA-Z0-9]', '').toLowerCase() : '';
                    System.debug('Normalized KEY: ' + keyNormalized);

                    if (keyNormalized.contains('borrowernames')) {
                        System.debug('Setting Borrower_Name_s__c');
                        newRecord.Borrower_Name_s__c = valueStr;
                    } else if (keyNormalized.contains('companyname')) {
                        System.debug('Setting Company_Name__c');
                        newRecord.Company_Name__c = valueStr;
                    } else if (keyNormalized.contains('loannumber')) {
                        System.debug('Setting Loan_Number__c');
                        newRecord.Loan_Number__c = valueStr;
                    } else if (keyNormalized.contains('typeofbusiness')) {
                        System.debug('Setting Type_of_Bussiness__c');
                        newRecord.Type_of_Bussiness__c = valueStr;
                    } else {
                        System.debug('NO MAPPING for this key: ' + keyStr);
                    }
                }
            }
        } else {
            System.debug('No ocrDocumentScanResultDetails found');
        }
    } else {
        System.debug('No outputValues in response');
    }

    try {
        System.debug('Inserting Profit_and_Loss__c: ' + newRecord);
        insert newRecord;
        System.debug('Inserted Profit_and_Loss__c record with Id: ' + newRecord.Id);
    } catch (Exception e) {
        System.debug('Failed to insert: ' + e.getMessage());
    }
}
