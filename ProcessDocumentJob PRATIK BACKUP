public class ProfitAndLossSaverJob implements Queueable {

    private String detailsString;

    public ProfitAndLossSaverJob(String detailsString) {
        this.detailsString = detailsString;
    }

    public void execute(QueueableContext context) {
        insertNewProfitAndLossRecord(detailsString);
    }

    private void insertNewProfitAndLossRecord(String detailsString) {
        // Defensive check
        if (String.isBlank(detailsString)) {
            System.debug('No details provided!');
            return;
        }

        Profit_and_Loss__c newRecord = new Profit_and_Loss__c();

        // Example: crude parsing (for demonstration - you may improve with Regex if needed)
        // Look for keys in your string and extract values
        // Example key pattern: key={value=XXXX, confidence=XX}
        Map<String, String> fieldMap = new Map<String, String>{
            'Borrower Name' => 'Borrower_Name_s__c',
            'Company Name' => 'Name',
            'Loan Number' => 'Loan_Number__c',
            'Type of Business' => 'Type_of_Bussiness__c'
        };

        for (String key : fieldMap.keySet()) {
            Pattern p = Pattern.compile(key + '[^}]*value=([^,}]*)');
            Matcher m = p.matcher(detailsString);
            if (m.find()) {
                String value = m.group(1).trim();
                // Set field accordingly
                if (fieldMap.get(key) == 'Borrower_Name_s__c') {
                    newRecord.Borrower_Name_s__c = value;
                } else if (fieldMap.get(key) == 'Name') {
                    newRecord.Name = value;
                } else if (fieldMap.get(key) == 'Loan_Number__c') {
                    // Remove any non-numeric character for loan number
                    //newRecord.Loan_Number__c = value.replaceAll('\\D', '');
                } else if (fieldMap.get(key) == 'Type_of_Bussiness__c') {
                    newRecord.Type_of_Bussiness__c = value;
                }
            }
        }

        // You can add more fields as needed

        try {
            insert newRecord;
            System.debug('Inserted Profit_and_Loss__c record with Id: ' + newRecord.Id);
        } catch (Exception e) {
            System.debug('Failed to insert: ' + e.getMessage());
        }
    }
}
